!function(e,n){if("object"==typeof exports&&"object"==typeof module)module.exports=n();else if("function"==typeof define&&define.amd)define([],n);else{var o=n();for(var t in o)("object"==typeof exports?exports:e)[t]=o[t]}}(this,function(){return function(e){function n(t){if(o[t])return o[t].exports;var r=o[t]={exports:{},id:t,loaded:!1};return e[t].call(r.exports,r,r.exports,n),r.loaded=!0,r.exports}var o={};return n.m=e,n.c=o,n.p="/libs/",n(0)}([function(e,n){"use strict";function o(){window.APP&&"ready"===window.APP.connect.status&&window.APP.connect.handler()}function t(e){e&&console.warn(e),window.XMPPAttachInfo={status:"error"},o()}var r=getConfigParamsFromUrl("hash",!0),c=getConfigParamsFromUrl("search",!0),i=r.hasOwnProperty("config.externalConnectUrl")?r["config.externalConnectUrl"]:config.externalConnectUrl;if(i&&window.createConnectionExternally){var a=getRoomName();if(a){i+="?room="+a;var s=r["config.token"]||config.token||c.jwt;s&&(i+="&token="+s),createConnectionExternally(i,function(e){window.XMPPAttachInfo={status:"success",data:e},o()},t)}else t()}else t()}])});
//# sourceMappingURL=do_external_connect.min.map